/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package Integracion.Esquemas.Referencias;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Contrato extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 8757712895896359335L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Contrato\",\"namespace\":\"Integracion.Esquemas.Referencias\",\"fields\":[{\"name\":\"codigoDeContratoInterno\",\"type\":\"string\"},{\"name\":\"descripcion\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"estaActivo\",\"type\":\"boolean\"},{\"name\":\"tipoDeServicio\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"codigoDeDireccion\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"codigoDeClienteInterno\",\"type\":\"string\"},{\"name\":\"vigenciaDesde\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"vigenciaHasta\",\"type\":[\"null\",\"string\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Contrato> ENCODER =
      new BinaryMessageEncoder<Contrato>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Contrato> DECODER =
      new BinaryMessageDecoder<Contrato>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Contrato> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Contrato> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Contrato> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Contrato>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Contrato to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Contrato from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Contrato instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Contrato fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.CharSequence codigoDeContratoInterno;
   private java.lang.CharSequence descripcion;
   private boolean estaActivo;
   private java.lang.CharSequence tipoDeServicio;
   private java.lang.CharSequence codigoDeDireccion;
   private java.lang.CharSequence codigoDeClienteInterno;
   private java.lang.CharSequence vigenciaDesde;
   private java.lang.CharSequence vigenciaHasta;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Contrato() {}

  /**
   * All-args constructor.
   * @param codigoDeContratoInterno The new value for codigoDeContratoInterno
   * @param descripcion The new value for descripcion
   * @param estaActivo The new value for estaActivo
   * @param tipoDeServicio The new value for tipoDeServicio
   * @param codigoDeDireccion The new value for codigoDeDireccion
   * @param codigoDeClienteInterno The new value for codigoDeClienteInterno
   * @param vigenciaDesde The new value for vigenciaDesde
   * @param vigenciaHasta The new value for vigenciaHasta
   */
  public Contrato(java.lang.CharSequence codigoDeContratoInterno, java.lang.CharSequence descripcion, java.lang.Boolean estaActivo, java.lang.CharSequence tipoDeServicio, java.lang.CharSequence codigoDeDireccion, java.lang.CharSequence codigoDeClienteInterno, java.lang.CharSequence vigenciaDesde, java.lang.CharSequence vigenciaHasta) {
    this.codigoDeContratoInterno = codigoDeContratoInterno;
    this.descripcion = descripcion;
    this.estaActivo = estaActivo;
    this.tipoDeServicio = tipoDeServicio;
    this.codigoDeDireccion = codigoDeDireccion;
    this.codigoDeClienteInterno = codigoDeClienteInterno;
    this.vigenciaDesde = vigenciaDesde;
    this.vigenciaHasta = vigenciaHasta;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return codigoDeContratoInterno;
    case 1: return descripcion;
    case 2: return estaActivo;
    case 3: return tipoDeServicio;
    case 4: return codigoDeDireccion;
    case 5: return codigoDeClienteInterno;
    case 6: return vigenciaDesde;
    case 7: return vigenciaHasta;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: codigoDeContratoInterno = (java.lang.CharSequence)value$; break;
    case 1: descripcion = (java.lang.CharSequence)value$; break;
    case 2: estaActivo = (java.lang.Boolean)value$; break;
    case 3: tipoDeServicio = (java.lang.CharSequence)value$; break;
    case 4: codigoDeDireccion = (java.lang.CharSequence)value$; break;
    case 5: codigoDeClienteInterno = (java.lang.CharSequence)value$; break;
    case 6: vigenciaDesde = (java.lang.CharSequence)value$; break;
    case 7: vigenciaHasta = (java.lang.CharSequence)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'codigoDeContratoInterno' field.
   * @return The value of the 'codigoDeContratoInterno' field.
   */
  public java.lang.CharSequence getCodigoDeContratoInterno() {
    return codigoDeContratoInterno;
  }


  /**
   * Sets the value of the 'codigoDeContratoInterno' field.
   * @param value the value to set.
   */
  public void setCodigoDeContratoInterno(java.lang.CharSequence value) {
    this.codigoDeContratoInterno = value;
  }

  /**
   * Gets the value of the 'descripcion' field.
   * @return The value of the 'descripcion' field.
   */
  public java.lang.CharSequence getDescripcion() {
    return descripcion;
  }


  /**
   * Sets the value of the 'descripcion' field.
   * @param value the value to set.
   */
  public void setDescripcion(java.lang.CharSequence value) {
    this.descripcion = value;
  }

  /**
   * Gets the value of the 'estaActivo' field.
   * @return The value of the 'estaActivo' field.
   */
  public boolean getEstaActivo() {
    return estaActivo;
  }


  /**
   * Sets the value of the 'estaActivo' field.
   * @param value the value to set.
   */
  public void setEstaActivo(boolean value) {
    this.estaActivo = value;
  }

  /**
   * Gets the value of the 'tipoDeServicio' field.
   * @return The value of the 'tipoDeServicio' field.
   */
  public java.lang.CharSequence getTipoDeServicio() {
    return tipoDeServicio;
  }


  /**
   * Sets the value of the 'tipoDeServicio' field.
   * @param value the value to set.
   */
  public void setTipoDeServicio(java.lang.CharSequence value) {
    this.tipoDeServicio = value;
  }

  /**
   * Gets the value of the 'codigoDeDireccion' field.
   * @return The value of the 'codigoDeDireccion' field.
   */
  public java.lang.CharSequence getCodigoDeDireccion() {
    return codigoDeDireccion;
  }


  /**
   * Sets the value of the 'codigoDeDireccion' field.
   * @param value the value to set.
   */
  public void setCodigoDeDireccion(java.lang.CharSequence value) {
    this.codigoDeDireccion = value;
  }

  /**
   * Gets the value of the 'codigoDeClienteInterno' field.
   * @return The value of the 'codigoDeClienteInterno' field.
   */
  public java.lang.CharSequence getCodigoDeClienteInterno() {
    return codigoDeClienteInterno;
  }


  /**
   * Sets the value of the 'codigoDeClienteInterno' field.
   * @param value the value to set.
   */
  public void setCodigoDeClienteInterno(java.lang.CharSequence value) {
    this.codigoDeClienteInterno = value;
  }

  /**
   * Gets the value of the 'vigenciaDesde' field.
   * @return The value of the 'vigenciaDesde' field.
   */
  public java.lang.CharSequence getVigenciaDesde() {
    return vigenciaDesde;
  }


  /**
   * Sets the value of the 'vigenciaDesde' field.
   * @param value the value to set.
   */
  public void setVigenciaDesde(java.lang.CharSequence value) {
    this.vigenciaDesde = value;
  }

  /**
   * Gets the value of the 'vigenciaHasta' field.
   * @return The value of the 'vigenciaHasta' field.
   */
  public java.lang.CharSequence getVigenciaHasta() {
    return vigenciaHasta;
  }


  /**
   * Sets the value of the 'vigenciaHasta' field.
   * @param value the value to set.
   */
  public void setVigenciaHasta(java.lang.CharSequence value) {
    this.vigenciaHasta = value;
  }

  /**
   * Creates a new Contrato RecordBuilder.
   * @return A new Contrato RecordBuilder
   */
  public static Integracion.Esquemas.Referencias.Contrato.Builder newBuilder() {
    return new Integracion.Esquemas.Referencias.Contrato.Builder();
  }

  /**
   * Creates a new Contrato RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Contrato RecordBuilder
   */
  public static Integracion.Esquemas.Referencias.Contrato.Builder newBuilder(Integracion.Esquemas.Referencias.Contrato.Builder other) {
    if (other == null) {
      return new Integracion.Esquemas.Referencias.Contrato.Builder();
    } else {
      return new Integracion.Esquemas.Referencias.Contrato.Builder(other);
    }
  }

  /**
   * Creates a new Contrato RecordBuilder by copying an existing Contrato instance.
   * @param other The existing instance to copy.
   * @return A new Contrato RecordBuilder
   */
  public static Integracion.Esquemas.Referencias.Contrato.Builder newBuilder(Integracion.Esquemas.Referencias.Contrato other) {
    if (other == null) {
      return new Integracion.Esquemas.Referencias.Contrato.Builder();
    } else {
      return new Integracion.Esquemas.Referencias.Contrato.Builder(other);
    }
  }

  /**
   * RecordBuilder for Contrato instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Contrato>
    implements org.apache.avro.data.RecordBuilder<Contrato> {

    private java.lang.CharSequence codigoDeContratoInterno;
    private java.lang.CharSequence descripcion;
    private boolean estaActivo;
    private java.lang.CharSequence tipoDeServicio;
    private java.lang.CharSequence codigoDeDireccion;
    private java.lang.CharSequence codigoDeClienteInterno;
    private java.lang.CharSequence vigenciaDesde;
    private java.lang.CharSequence vigenciaHasta;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(Integracion.Esquemas.Referencias.Contrato.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.codigoDeContratoInterno)) {
        this.codigoDeContratoInterno = data().deepCopy(fields()[0].schema(), other.codigoDeContratoInterno);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.descripcion)) {
        this.descripcion = data().deepCopy(fields()[1].schema(), other.descripcion);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.estaActivo)) {
        this.estaActivo = data().deepCopy(fields()[2].schema(), other.estaActivo);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.tipoDeServicio)) {
        this.tipoDeServicio = data().deepCopy(fields()[3].schema(), other.tipoDeServicio);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.codigoDeDireccion)) {
        this.codigoDeDireccion = data().deepCopy(fields()[4].schema(), other.codigoDeDireccion);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.codigoDeClienteInterno)) {
        this.codigoDeClienteInterno = data().deepCopy(fields()[5].schema(), other.codigoDeClienteInterno);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.vigenciaDesde)) {
        this.vigenciaDesde = data().deepCopy(fields()[6].schema(), other.vigenciaDesde);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.vigenciaHasta)) {
        this.vigenciaHasta = data().deepCopy(fields()[7].schema(), other.vigenciaHasta);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
    }

    /**
     * Creates a Builder by copying an existing Contrato instance
     * @param other The existing instance to copy.
     */
    private Builder(Integracion.Esquemas.Referencias.Contrato other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.codigoDeContratoInterno)) {
        this.codigoDeContratoInterno = data().deepCopy(fields()[0].schema(), other.codigoDeContratoInterno);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.descripcion)) {
        this.descripcion = data().deepCopy(fields()[1].schema(), other.descripcion);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.estaActivo)) {
        this.estaActivo = data().deepCopy(fields()[2].schema(), other.estaActivo);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.tipoDeServicio)) {
        this.tipoDeServicio = data().deepCopy(fields()[3].schema(), other.tipoDeServicio);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.codigoDeDireccion)) {
        this.codigoDeDireccion = data().deepCopy(fields()[4].schema(), other.codigoDeDireccion);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.codigoDeClienteInterno)) {
        this.codigoDeClienteInterno = data().deepCopy(fields()[5].schema(), other.codigoDeClienteInterno);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.vigenciaDesde)) {
        this.vigenciaDesde = data().deepCopy(fields()[6].schema(), other.vigenciaDesde);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.vigenciaHasta)) {
        this.vigenciaHasta = data().deepCopy(fields()[7].schema(), other.vigenciaHasta);
        fieldSetFlags()[7] = true;
      }
    }

    /**
      * Gets the value of the 'codigoDeContratoInterno' field.
      * @return The value.
      */
    public java.lang.CharSequence getCodigoDeContratoInterno() {
      return codigoDeContratoInterno;
    }


    /**
      * Sets the value of the 'codigoDeContratoInterno' field.
      * @param value The value of 'codigoDeContratoInterno'.
      * @return This builder.
      */
    public Integracion.Esquemas.Referencias.Contrato.Builder setCodigoDeContratoInterno(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.codigoDeContratoInterno = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'codigoDeContratoInterno' field has been set.
      * @return True if the 'codigoDeContratoInterno' field has been set, false otherwise.
      */
    public boolean hasCodigoDeContratoInterno() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'codigoDeContratoInterno' field.
      * @return This builder.
      */
    public Integracion.Esquemas.Referencias.Contrato.Builder clearCodigoDeContratoInterno() {
      codigoDeContratoInterno = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'descripcion' field.
      * @return The value.
      */
    public java.lang.CharSequence getDescripcion() {
      return descripcion;
    }


    /**
      * Sets the value of the 'descripcion' field.
      * @param value The value of 'descripcion'.
      * @return This builder.
      */
    public Integracion.Esquemas.Referencias.Contrato.Builder setDescripcion(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.descripcion = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'descripcion' field has been set.
      * @return True if the 'descripcion' field has been set, false otherwise.
      */
    public boolean hasDescripcion() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'descripcion' field.
      * @return This builder.
      */
    public Integracion.Esquemas.Referencias.Contrato.Builder clearDescripcion() {
      descripcion = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'estaActivo' field.
      * @return The value.
      */
    public boolean getEstaActivo() {
      return estaActivo;
    }


    /**
      * Sets the value of the 'estaActivo' field.
      * @param value The value of 'estaActivo'.
      * @return This builder.
      */
    public Integracion.Esquemas.Referencias.Contrato.Builder setEstaActivo(boolean value) {
      validate(fields()[2], value);
      this.estaActivo = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'estaActivo' field has been set.
      * @return True if the 'estaActivo' field has been set, false otherwise.
      */
    public boolean hasEstaActivo() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'estaActivo' field.
      * @return This builder.
      */
    public Integracion.Esquemas.Referencias.Contrato.Builder clearEstaActivo() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'tipoDeServicio' field.
      * @return The value.
      */
    public java.lang.CharSequence getTipoDeServicio() {
      return tipoDeServicio;
    }


    /**
      * Sets the value of the 'tipoDeServicio' field.
      * @param value The value of 'tipoDeServicio'.
      * @return This builder.
      */
    public Integracion.Esquemas.Referencias.Contrato.Builder setTipoDeServicio(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.tipoDeServicio = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'tipoDeServicio' field has been set.
      * @return True if the 'tipoDeServicio' field has been set, false otherwise.
      */
    public boolean hasTipoDeServicio() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'tipoDeServicio' field.
      * @return This builder.
      */
    public Integracion.Esquemas.Referencias.Contrato.Builder clearTipoDeServicio() {
      tipoDeServicio = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'codigoDeDireccion' field.
      * @return The value.
      */
    public java.lang.CharSequence getCodigoDeDireccion() {
      return codigoDeDireccion;
    }


    /**
      * Sets the value of the 'codigoDeDireccion' field.
      * @param value The value of 'codigoDeDireccion'.
      * @return This builder.
      */
    public Integracion.Esquemas.Referencias.Contrato.Builder setCodigoDeDireccion(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.codigoDeDireccion = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'codigoDeDireccion' field has been set.
      * @return True if the 'codigoDeDireccion' field has been set, false otherwise.
      */
    public boolean hasCodigoDeDireccion() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'codigoDeDireccion' field.
      * @return This builder.
      */
    public Integracion.Esquemas.Referencias.Contrato.Builder clearCodigoDeDireccion() {
      codigoDeDireccion = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'codigoDeClienteInterno' field.
      * @return The value.
      */
    public java.lang.CharSequence getCodigoDeClienteInterno() {
      return codigoDeClienteInterno;
    }


    /**
      * Sets the value of the 'codigoDeClienteInterno' field.
      * @param value The value of 'codigoDeClienteInterno'.
      * @return This builder.
      */
    public Integracion.Esquemas.Referencias.Contrato.Builder setCodigoDeClienteInterno(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.codigoDeClienteInterno = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'codigoDeClienteInterno' field has been set.
      * @return True if the 'codigoDeClienteInterno' field has been set, false otherwise.
      */
    public boolean hasCodigoDeClienteInterno() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'codigoDeClienteInterno' field.
      * @return This builder.
      */
    public Integracion.Esquemas.Referencias.Contrato.Builder clearCodigoDeClienteInterno() {
      codigoDeClienteInterno = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'vigenciaDesde' field.
      * @return The value.
      */
    public java.lang.CharSequence getVigenciaDesde() {
      return vigenciaDesde;
    }


    /**
      * Sets the value of the 'vigenciaDesde' field.
      * @param value The value of 'vigenciaDesde'.
      * @return This builder.
      */
    public Integracion.Esquemas.Referencias.Contrato.Builder setVigenciaDesde(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.vigenciaDesde = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'vigenciaDesde' field has been set.
      * @return True if the 'vigenciaDesde' field has been set, false otherwise.
      */
    public boolean hasVigenciaDesde() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'vigenciaDesde' field.
      * @return This builder.
      */
    public Integracion.Esquemas.Referencias.Contrato.Builder clearVigenciaDesde() {
      vigenciaDesde = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'vigenciaHasta' field.
      * @return The value.
      */
    public java.lang.CharSequence getVigenciaHasta() {
      return vigenciaHasta;
    }


    /**
      * Sets the value of the 'vigenciaHasta' field.
      * @param value The value of 'vigenciaHasta'.
      * @return This builder.
      */
    public Integracion.Esquemas.Referencias.Contrato.Builder setVigenciaHasta(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.vigenciaHasta = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'vigenciaHasta' field has been set.
      * @return True if the 'vigenciaHasta' field has been set, false otherwise.
      */
    public boolean hasVigenciaHasta() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'vigenciaHasta' field.
      * @return This builder.
      */
    public Integracion.Esquemas.Referencias.Contrato.Builder clearVigenciaHasta() {
      vigenciaHasta = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Contrato build() {
      try {
        Contrato record = new Contrato();
        record.codigoDeContratoInterno = fieldSetFlags()[0] ? this.codigoDeContratoInterno : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.descripcion = fieldSetFlags()[1] ? this.descripcion : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.estaActivo = fieldSetFlags()[2] ? this.estaActivo : (java.lang.Boolean) defaultValue(fields()[2]);
        record.tipoDeServicio = fieldSetFlags()[3] ? this.tipoDeServicio : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.codigoDeDireccion = fieldSetFlags()[4] ? this.codigoDeDireccion : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.codigoDeClienteInterno = fieldSetFlags()[5] ? this.codigoDeClienteInterno : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.vigenciaDesde = fieldSetFlags()[6] ? this.vigenciaDesde : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.vigenciaHasta = fieldSetFlags()[7] ? this.vigenciaHasta : (java.lang.CharSequence) defaultValue(fields()[7]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Contrato>
    WRITER$ = (org.apache.avro.io.DatumWriter<Contrato>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Contrato>
    READER$ = (org.apache.avro.io.DatumReader<Contrato>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.codigoDeContratoInterno);

    if (this.descripcion == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.descripcion);
    }

    out.writeBoolean(this.estaActivo);

    if (this.tipoDeServicio == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.tipoDeServicio);
    }

    if (this.codigoDeDireccion == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.codigoDeDireccion);
    }

    out.writeString(this.codigoDeClienteInterno);

    if (this.vigenciaDesde == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.vigenciaDesde);
    }

    if (this.vigenciaHasta == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.vigenciaHasta);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.codigoDeContratoInterno = in.readString(this.codigoDeContratoInterno instanceof Utf8 ? (Utf8)this.codigoDeContratoInterno : null);

      if (in.readIndex() != 1) {
        in.readNull();
        this.descripcion = null;
      } else {
        this.descripcion = in.readString(this.descripcion instanceof Utf8 ? (Utf8)this.descripcion : null);
      }

      this.estaActivo = in.readBoolean();

      if (in.readIndex() != 1) {
        in.readNull();
        this.tipoDeServicio = null;
      } else {
        this.tipoDeServicio = in.readString(this.tipoDeServicio instanceof Utf8 ? (Utf8)this.tipoDeServicio : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.codigoDeDireccion = null;
      } else {
        this.codigoDeDireccion = in.readString(this.codigoDeDireccion instanceof Utf8 ? (Utf8)this.codigoDeDireccion : null);
      }

      this.codigoDeClienteInterno = in.readString(this.codigoDeClienteInterno instanceof Utf8 ? (Utf8)this.codigoDeClienteInterno : null);

      if (in.readIndex() != 1) {
        in.readNull();
        this.vigenciaDesde = null;
      } else {
        this.vigenciaDesde = in.readString(this.vigenciaDesde instanceof Utf8 ? (Utf8)this.vigenciaDesde : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.vigenciaHasta = null;
      } else {
        this.vigenciaHasta = in.readString(this.vigenciaHasta instanceof Utf8 ? (Utf8)this.vigenciaHasta : null);
      }

    } else {
      for (int i = 0; i < 8; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.codigoDeContratoInterno = in.readString(this.codigoDeContratoInterno instanceof Utf8 ? (Utf8)this.codigoDeContratoInterno : null);
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.descripcion = null;
          } else {
            this.descripcion = in.readString(this.descripcion instanceof Utf8 ? (Utf8)this.descripcion : null);
          }
          break;

        case 2:
          this.estaActivo = in.readBoolean();
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.tipoDeServicio = null;
          } else {
            this.tipoDeServicio = in.readString(this.tipoDeServicio instanceof Utf8 ? (Utf8)this.tipoDeServicio : null);
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.codigoDeDireccion = null;
          } else {
            this.codigoDeDireccion = in.readString(this.codigoDeDireccion instanceof Utf8 ? (Utf8)this.codigoDeDireccion : null);
          }
          break;

        case 5:
          this.codigoDeClienteInterno = in.readString(this.codigoDeClienteInterno instanceof Utf8 ? (Utf8)this.codigoDeClienteInterno : null);
          break;

        case 6:
          if (in.readIndex() != 1) {
            in.readNull();
            this.vigenciaDesde = null;
          } else {
            this.vigenciaDesde = in.readString(this.vigenciaDesde instanceof Utf8 ? (Utf8)this.vigenciaDesde : null);
          }
          break;

        case 7:
          if (in.readIndex() != 1) {
            in.readNull();
            this.vigenciaHasta = null;
          } else {
            this.vigenciaHasta = in.readString(this.vigenciaHasta instanceof Utf8 ? (Utf8)this.vigenciaHasta : null);
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










