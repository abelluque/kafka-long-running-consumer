/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package Integracion.Esquemas.Referencias;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Direccion extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 6439465688256005797L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Direccion\",\"namespace\":\"Integracion.Esquemas.Referencias\",\"fields\":[{\"name\":\"abreviaturaProvincia\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"calle\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"codigoDeDireccion\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"codigoCiudad\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"codigoPostal\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"nombreProvincia\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"numero\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"telefono\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"codigoISOProvincia\",\"type\":[\"null\",\"string\"],\"doc\":\"segun ISO -3166-2 (https://es.wikipedia.org/wiki/ISO_3166-2:AR)\",\"default\":null},{\"name\":\"codigoISOPais\",\"type\":[\"null\",\"string\"],\"doc\":\"segun ISO 3166-1 alpha-2 (https://es.wikipedia.org/wiki/ISO_3166-1#Tabla_de_c.C3.B3digos_alfa-2_asignados_o_reservados)\",\"default\":null},{\"name\":\"localidad\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"componentesDeDireccion\",\"type\":[\"null\",{\"type\":\"map\",\"values\":\"string\"}],\"default\":null},{\"name\":\"coordenadas\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"GeoReferencia\",\"fields\":[{\"name\":\"latitud\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"longitud\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"altura\",\"type\":[\"null\",\"double\"],\"default\":null}]}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Direccion> ENCODER =
      new BinaryMessageEncoder<Direccion>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Direccion> DECODER =
      new BinaryMessageDecoder<Direccion>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Direccion> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Direccion> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Direccion> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Direccion>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Direccion to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Direccion from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Direccion instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Direccion fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.CharSequence abreviaturaProvincia;
   private java.lang.CharSequence calle;
   private java.lang.CharSequence codigoDeDireccion;
   private java.lang.CharSequence codigoCiudad;
   private java.lang.CharSequence codigoPostal;
   private java.lang.CharSequence nombreProvincia;
   private java.lang.CharSequence numero;
   private java.lang.CharSequence telefono;
  /** segun ISO -3166-2 (https://es.wikipedia.org/wiki/ISO_3166-2:AR) */
   private java.lang.CharSequence codigoISOProvincia;
  /** segun ISO 3166-1 alpha-2 (https://es.wikipedia.org/wiki/ISO_3166-1#Tabla_de_c.C3.B3digos_alfa-2_asignados_o_reservados) */
   private java.lang.CharSequence codigoISOPais;
   private java.lang.CharSequence localidad;
   private java.util.Map<java.lang.CharSequence,java.lang.CharSequence> componentesDeDireccion;
   private Integracion.Esquemas.Referencias.GeoReferencia coordenadas;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Direccion() {}

  /**
   * All-args constructor.
   * @param abreviaturaProvincia The new value for abreviaturaProvincia
   * @param calle The new value for calle
   * @param codigoDeDireccion The new value for codigoDeDireccion
   * @param codigoCiudad The new value for codigoCiudad
   * @param codigoPostal The new value for codigoPostal
   * @param nombreProvincia The new value for nombreProvincia
   * @param numero The new value for numero
   * @param telefono The new value for telefono
   * @param codigoISOProvincia segun ISO -3166-2 (https://es.wikipedia.org/wiki/ISO_3166-2:AR)
   * @param codigoISOPais segun ISO 3166-1 alpha-2 (https://es.wikipedia.org/wiki/ISO_3166-1#Tabla_de_c.C3.B3digos_alfa-2_asignados_o_reservados)
   * @param localidad The new value for localidad
   * @param componentesDeDireccion The new value for componentesDeDireccion
   * @param coordenadas The new value for coordenadas
   */
  public Direccion(java.lang.CharSequence abreviaturaProvincia, java.lang.CharSequence calle, java.lang.CharSequence codigoDeDireccion, java.lang.CharSequence codigoCiudad, java.lang.CharSequence codigoPostal, java.lang.CharSequence nombreProvincia, java.lang.CharSequence numero, java.lang.CharSequence telefono, java.lang.CharSequence codigoISOProvincia, java.lang.CharSequence codigoISOPais, java.lang.CharSequence localidad, java.util.Map<java.lang.CharSequence,java.lang.CharSequence> componentesDeDireccion, Integracion.Esquemas.Referencias.GeoReferencia coordenadas) {
    this.abreviaturaProvincia = abreviaturaProvincia;
    this.calle = calle;
    this.codigoDeDireccion = codigoDeDireccion;
    this.codigoCiudad = codigoCiudad;
    this.codigoPostal = codigoPostal;
    this.nombreProvincia = nombreProvincia;
    this.numero = numero;
    this.telefono = telefono;
    this.codigoISOProvincia = codigoISOProvincia;
    this.codigoISOPais = codigoISOPais;
    this.localidad = localidad;
    this.componentesDeDireccion = componentesDeDireccion;
    this.coordenadas = coordenadas;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return abreviaturaProvincia;
    case 1: return calle;
    case 2: return codigoDeDireccion;
    case 3: return codigoCiudad;
    case 4: return codigoPostal;
    case 5: return nombreProvincia;
    case 6: return numero;
    case 7: return telefono;
    case 8: return codigoISOProvincia;
    case 9: return codigoISOPais;
    case 10: return localidad;
    case 11: return componentesDeDireccion;
    case 12: return coordenadas;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: abreviaturaProvincia = (java.lang.CharSequence)value$; break;
    case 1: calle = (java.lang.CharSequence)value$; break;
    case 2: codigoDeDireccion = (java.lang.CharSequence)value$; break;
    case 3: codigoCiudad = (java.lang.CharSequence)value$; break;
    case 4: codigoPostal = (java.lang.CharSequence)value$; break;
    case 5: nombreProvincia = (java.lang.CharSequence)value$; break;
    case 6: numero = (java.lang.CharSequence)value$; break;
    case 7: telefono = (java.lang.CharSequence)value$; break;
    case 8: codigoISOProvincia = (java.lang.CharSequence)value$; break;
    case 9: codigoISOPais = (java.lang.CharSequence)value$; break;
    case 10: localidad = (java.lang.CharSequence)value$; break;
    case 11: componentesDeDireccion = (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>)value$; break;
    case 12: coordenadas = (Integracion.Esquemas.Referencias.GeoReferencia)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'abreviaturaProvincia' field.
   * @return The value of the 'abreviaturaProvincia' field.
   */
  public java.lang.CharSequence getAbreviaturaProvincia() {
    return abreviaturaProvincia;
  }


  /**
   * Sets the value of the 'abreviaturaProvincia' field.
   * @param value the value to set.
   */
  public void setAbreviaturaProvincia(java.lang.CharSequence value) {
    this.abreviaturaProvincia = value;
  }

  /**
   * Gets the value of the 'calle' field.
   * @return The value of the 'calle' field.
   */
  public java.lang.CharSequence getCalle() {
    return calle;
  }


  /**
   * Sets the value of the 'calle' field.
   * @param value the value to set.
   */
  public void setCalle(java.lang.CharSequence value) {
    this.calle = value;
  }

  /**
   * Gets the value of the 'codigoDeDireccion' field.
   * @return The value of the 'codigoDeDireccion' field.
   */
  public java.lang.CharSequence getCodigoDeDireccion() {
    return codigoDeDireccion;
  }


  /**
   * Sets the value of the 'codigoDeDireccion' field.
   * @param value the value to set.
   */
  public void setCodigoDeDireccion(java.lang.CharSequence value) {
    this.codigoDeDireccion = value;
  }

  /**
   * Gets the value of the 'codigoCiudad' field.
   * @return The value of the 'codigoCiudad' field.
   */
  public java.lang.CharSequence getCodigoCiudad() {
    return codigoCiudad;
  }


  /**
   * Sets the value of the 'codigoCiudad' field.
   * @param value the value to set.
   */
  public void setCodigoCiudad(java.lang.CharSequence value) {
    this.codigoCiudad = value;
  }

  /**
   * Gets the value of the 'codigoPostal' field.
   * @return The value of the 'codigoPostal' field.
   */
  public java.lang.CharSequence getCodigoPostal() {
    return codigoPostal;
  }


  /**
   * Sets the value of the 'codigoPostal' field.
   * @param value the value to set.
   */
  public void setCodigoPostal(java.lang.CharSequence value) {
    this.codigoPostal = value;
  }

  /**
   * Gets the value of the 'nombreProvincia' field.
   * @return The value of the 'nombreProvincia' field.
   */
  public java.lang.CharSequence getNombreProvincia() {
    return nombreProvincia;
  }


  /**
   * Sets the value of the 'nombreProvincia' field.
   * @param value the value to set.
   */
  public void setNombreProvincia(java.lang.CharSequence value) {
    this.nombreProvincia = value;
  }

  /**
   * Gets the value of the 'numero' field.
   * @return The value of the 'numero' field.
   */
  public java.lang.CharSequence getNumero() {
    return numero;
  }


  /**
   * Sets the value of the 'numero' field.
   * @param value the value to set.
   */
  public void setNumero(java.lang.CharSequence value) {
    this.numero = value;
  }

  /**
   * Gets the value of the 'telefono' field.
   * @return The value of the 'telefono' field.
   */
  public java.lang.CharSequence getTelefono() {
    return telefono;
  }


  /**
   * Sets the value of the 'telefono' field.
   * @param value the value to set.
   */
  public void setTelefono(java.lang.CharSequence value) {
    this.telefono = value;
  }

  /**
   * Gets the value of the 'codigoISOProvincia' field.
   * @return segun ISO -3166-2 (https://es.wikipedia.org/wiki/ISO_3166-2:AR)
   */
  public java.lang.CharSequence getCodigoISOProvincia() {
    return codigoISOProvincia;
  }


  /**
   * Sets the value of the 'codigoISOProvincia' field.
   * segun ISO -3166-2 (https://es.wikipedia.org/wiki/ISO_3166-2:AR)
   * @param value the value to set.
   */
  public void setCodigoISOProvincia(java.lang.CharSequence value) {
    this.codigoISOProvincia = value;
  }

  /**
   * Gets the value of the 'codigoISOPais' field.
   * @return segun ISO 3166-1 alpha-2 (https://es.wikipedia.org/wiki/ISO_3166-1#Tabla_de_c.C3.B3digos_alfa-2_asignados_o_reservados)
   */
  public java.lang.CharSequence getCodigoISOPais() {
    return codigoISOPais;
  }


  /**
   * Sets the value of the 'codigoISOPais' field.
   * segun ISO 3166-1 alpha-2 (https://es.wikipedia.org/wiki/ISO_3166-1#Tabla_de_c.C3.B3digos_alfa-2_asignados_o_reservados)
   * @param value the value to set.
   */
  public void setCodigoISOPais(java.lang.CharSequence value) {
    this.codigoISOPais = value;
  }

  /**
   * Gets the value of the 'localidad' field.
   * @return The value of the 'localidad' field.
   */
  public java.lang.CharSequence getLocalidad() {
    return localidad;
  }


  /**
   * Sets the value of the 'localidad' field.
   * @param value the value to set.
   */
  public void setLocalidad(java.lang.CharSequence value) {
    this.localidad = value;
  }

  /**
   * Gets the value of the 'componentesDeDireccion' field.
   * @return The value of the 'componentesDeDireccion' field.
   */
  public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getComponentesDeDireccion() {
    return componentesDeDireccion;
  }


  /**
   * Sets the value of the 'componentesDeDireccion' field.
   * @param value the value to set.
   */
  public void setComponentesDeDireccion(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
    this.componentesDeDireccion = value;
  }

  /**
   * Gets the value of the 'coordenadas' field.
   * @return The value of the 'coordenadas' field.
   */
  public Integracion.Esquemas.Referencias.GeoReferencia getCoordenadas() {
    return coordenadas;
  }


  /**
   * Sets the value of the 'coordenadas' field.
   * @param value the value to set.
   */
  public void setCoordenadas(Integracion.Esquemas.Referencias.GeoReferencia value) {
    this.coordenadas = value;
  }

  /**
   * Creates a new Direccion RecordBuilder.
   * @return A new Direccion RecordBuilder
   */
  public static Integracion.Esquemas.Referencias.Direccion.Builder newBuilder() {
    return new Integracion.Esquemas.Referencias.Direccion.Builder();
  }

  /**
   * Creates a new Direccion RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Direccion RecordBuilder
   */
  public static Integracion.Esquemas.Referencias.Direccion.Builder newBuilder(Integracion.Esquemas.Referencias.Direccion.Builder other) {
    if (other == null) {
      return new Integracion.Esquemas.Referencias.Direccion.Builder();
    } else {
      return new Integracion.Esquemas.Referencias.Direccion.Builder(other);
    }
  }

  /**
   * Creates a new Direccion RecordBuilder by copying an existing Direccion instance.
   * @param other The existing instance to copy.
   * @return A new Direccion RecordBuilder
   */
  public static Integracion.Esquemas.Referencias.Direccion.Builder newBuilder(Integracion.Esquemas.Referencias.Direccion other) {
    if (other == null) {
      return new Integracion.Esquemas.Referencias.Direccion.Builder();
    } else {
      return new Integracion.Esquemas.Referencias.Direccion.Builder(other);
    }
  }

  /**
   * RecordBuilder for Direccion instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Direccion>
    implements org.apache.avro.data.RecordBuilder<Direccion> {

    private java.lang.CharSequence abreviaturaProvincia;
    private java.lang.CharSequence calle;
    private java.lang.CharSequence codigoDeDireccion;
    private java.lang.CharSequence codigoCiudad;
    private java.lang.CharSequence codigoPostal;
    private java.lang.CharSequence nombreProvincia;
    private java.lang.CharSequence numero;
    private java.lang.CharSequence telefono;
    /** segun ISO -3166-2 (https://es.wikipedia.org/wiki/ISO_3166-2:AR) */
    private java.lang.CharSequence codigoISOProvincia;
    /** segun ISO 3166-1 alpha-2 (https://es.wikipedia.org/wiki/ISO_3166-1#Tabla_de_c.C3.B3digos_alfa-2_asignados_o_reservados) */
    private java.lang.CharSequence codigoISOPais;
    private java.lang.CharSequence localidad;
    private java.util.Map<java.lang.CharSequence,java.lang.CharSequence> componentesDeDireccion;
    private Integracion.Esquemas.Referencias.GeoReferencia coordenadas;
    private Integracion.Esquemas.Referencias.GeoReferencia.Builder coordenadasBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(Integracion.Esquemas.Referencias.Direccion.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.abreviaturaProvincia)) {
        this.abreviaturaProvincia = data().deepCopy(fields()[0].schema(), other.abreviaturaProvincia);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.calle)) {
        this.calle = data().deepCopy(fields()[1].schema(), other.calle);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.codigoDeDireccion)) {
        this.codigoDeDireccion = data().deepCopy(fields()[2].schema(), other.codigoDeDireccion);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.codigoCiudad)) {
        this.codigoCiudad = data().deepCopy(fields()[3].schema(), other.codigoCiudad);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.codigoPostal)) {
        this.codigoPostal = data().deepCopy(fields()[4].schema(), other.codigoPostal);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.nombreProvincia)) {
        this.nombreProvincia = data().deepCopy(fields()[5].schema(), other.nombreProvincia);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.numero)) {
        this.numero = data().deepCopy(fields()[6].schema(), other.numero);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.telefono)) {
        this.telefono = data().deepCopy(fields()[7].schema(), other.telefono);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.codigoISOProvincia)) {
        this.codigoISOProvincia = data().deepCopy(fields()[8].schema(), other.codigoISOProvincia);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.codigoISOPais)) {
        this.codigoISOPais = data().deepCopy(fields()[9].schema(), other.codigoISOPais);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.localidad)) {
        this.localidad = data().deepCopy(fields()[10].schema(), other.localidad);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.componentesDeDireccion)) {
        this.componentesDeDireccion = data().deepCopy(fields()[11].schema(), other.componentesDeDireccion);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.coordenadas)) {
        this.coordenadas = data().deepCopy(fields()[12].schema(), other.coordenadas);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (other.hasCoordenadasBuilder()) {
        this.coordenadasBuilder = Integracion.Esquemas.Referencias.GeoReferencia.newBuilder(other.getCoordenadasBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing Direccion instance
     * @param other The existing instance to copy.
     */
    private Builder(Integracion.Esquemas.Referencias.Direccion other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.abreviaturaProvincia)) {
        this.abreviaturaProvincia = data().deepCopy(fields()[0].schema(), other.abreviaturaProvincia);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.calle)) {
        this.calle = data().deepCopy(fields()[1].schema(), other.calle);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.codigoDeDireccion)) {
        this.codigoDeDireccion = data().deepCopy(fields()[2].schema(), other.codigoDeDireccion);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.codigoCiudad)) {
        this.codigoCiudad = data().deepCopy(fields()[3].schema(), other.codigoCiudad);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.codigoPostal)) {
        this.codigoPostal = data().deepCopy(fields()[4].schema(), other.codigoPostal);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.nombreProvincia)) {
        this.nombreProvincia = data().deepCopy(fields()[5].schema(), other.nombreProvincia);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.numero)) {
        this.numero = data().deepCopy(fields()[6].schema(), other.numero);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.telefono)) {
        this.telefono = data().deepCopy(fields()[7].schema(), other.telefono);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.codigoISOProvincia)) {
        this.codigoISOProvincia = data().deepCopy(fields()[8].schema(), other.codigoISOProvincia);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.codigoISOPais)) {
        this.codigoISOPais = data().deepCopy(fields()[9].schema(), other.codigoISOPais);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.localidad)) {
        this.localidad = data().deepCopy(fields()[10].schema(), other.localidad);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.componentesDeDireccion)) {
        this.componentesDeDireccion = data().deepCopy(fields()[11].schema(), other.componentesDeDireccion);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.coordenadas)) {
        this.coordenadas = data().deepCopy(fields()[12].schema(), other.coordenadas);
        fieldSetFlags()[12] = true;
      }
      this.coordenadasBuilder = null;
    }

    /**
      * Gets the value of the 'abreviaturaProvincia' field.
      * @return The value.
      */
    public java.lang.CharSequence getAbreviaturaProvincia() {
      return abreviaturaProvincia;
    }


    /**
      * Sets the value of the 'abreviaturaProvincia' field.
      * @param value The value of 'abreviaturaProvincia'.
      * @return This builder.
      */
    public Integracion.Esquemas.Referencias.Direccion.Builder setAbreviaturaProvincia(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.abreviaturaProvincia = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'abreviaturaProvincia' field has been set.
      * @return True if the 'abreviaturaProvincia' field has been set, false otherwise.
      */
    public boolean hasAbreviaturaProvincia() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'abreviaturaProvincia' field.
      * @return This builder.
      */
    public Integracion.Esquemas.Referencias.Direccion.Builder clearAbreviaturaProvincia() {
      abreviaturaProvincia = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'calle' field.
      * @return The value.
      */
    public java.lang.CharSequence getCalle() {
      return calle;
    }


    /**
      * Sets the value of the 'calle' field.
      * @param value The value of 'calle'.
      * @return This builder.
      */
    public Integracion.Esquemas.Referencias.Direccion.Builder setCalle(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.calle = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'calle' field has been set.
      * @return True if the 'calle' field has been set, false otherwise.
      */
    public boolean hasCalle() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'calle' field.
      * @return This builder.
      */
    public Integracion.Esquemas.Referencias.Direccion.Builder clearCalle() {
      calle = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'codigoDeDireccion' field.
      * @return The value.
      */
    public java.lang.CharSequence getCodigoDeDireccion() {
      return codigoDeDireccion;
    }


    /**
      * Sets the value of the 'codigoDeDireccion' field.
      * @param value The value of 'codigoDeDireccion'.
      * @return This builder.
      */
    public Integracion.Esquemas.Referencias.Direccion.Builder setCodigoDeDireccion(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.codigoDeDireccion = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'codigoDeDireccion' field has been set.
      * @return True if the 'codigoDeDireccion' field has been set, false otherwise.
      */
    public boolean hasCodigoDeDireccion() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'codigoDeDireccion' field.
      * @return This builder.
      */
    public Integracion.Esquemas.Referencias.Direccion.Builder clearCodigoDeDireccion() {
      codigoDeDireccion = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'codigoCiudad' field.
      * @return The value.
      */
    public java.lang.CharSequence getCodigoCiudad() {
      return codigoCiudad;
    }


    /**
      * Sets the value of the 'codigoCiudad' field.
      * @param value The value of 'codigoCiudad'.
      * @return This builder.
      */
    public Integracion.Esquemas.Referencias.Direccion.Builder setCodigoCiudad(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.codigoCiudad = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'codigoCiudad' field has been set.
      * @return True if the 'codigoCiudad' field has been set, false otherwise.
      */
    public boolean hasCodigoCiudad() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'codigoCiudad' field.
      * @return This builder.
      */
    public Integracion.Esquemas.Referencias.Direccion.Builder clearCodigoCiudad() {
      codigoCiudad = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'codigoPostal' field.
      * @return The value.
      */
    public java.lang.CharSequence getCodigoPostal() {
      return codigoPostal;
    }


    /**
      * Sets the value of the 'codigoPostal' field.
      * @param value The value of 'codigoPostal'.
      * @return This builder.
      */
    public Integracion.Esquemas.Referencias.Direccion.Builder setCodigoPostal(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.codigoPostal = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'codigoPostal' field has been set.
      * @return True if the 'codigoPostal' field has been set, false otherwise.
      */
    public boolean hasCodigoPostal() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'codigoPostal' field.
      * @return This builder.
      */
    public Integracion.Esquemas.Referencias.Direccion.Builder clearCodigoPostal() {
      codigoPostal = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'nombreProvincia' field.
      * @return The value.
      */
    public java.lang.CharSequence getNombreProvincia() {
      return nombreProvincia;
    }


    /**
      * Sets the value of the 'nombreProvincia' field.
      * @param value The value of 'nombreProvincia'.
      * @return This builder.
      */
    public Integracion.Esquemas.Referencias.Direccion.Builder setNombreProvincia(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.nombreProvincia = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'nombreProvincia' field has been set.
      * @return True if the 'nombreProvincia' field has been set, false otherwise.
      */
    public boolean hasNombreProvincia() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'nombreProvincia' field.
      * @return This builder.
      */
    public Integracion.Esquemas.Referencias.Direccion.Builder clearNombreProvincia() {
      nombreProvincia = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'numero' field.
      * @return The value.
      */
    public java.lang.CharSequence getNumero() {
      return numero;
    }


    /**
      * Sets the value of the 'numero' field.
      * @param value The value of 'numero'.
      * @return This builder.
      */
    public Integracion.Esquemas.Referencias.Direccion.Builder setNumero(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.numero = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'numero' field has been set.
      * @return True if the 'numero' field has been set, false otherwise.
      */
    public boolean hasNumero() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'numero' field.
      * @return This builder.
      */
    public Integracion.Esquemas.Referencias.Direccion.Builder clearNumero() {
      numero = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'telefono' field.
      * @return The value.
      */
    public java.lang.CharSequence getTelefono() {
      return telefono;
    }


    /**
      * Sets the value of the 'telefono' field.
      * @param value The value of 'telefono'.
      * @return This builder.
      */
    public Integracion.Esquemas.Referencias.Direccion.Builder setTelefono(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.telefono = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'telefono' field has been set.
      * @return True if the 'telefono' field has been set, false otherwise.
      */
    public boolean hasTelefono() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'telefono' field.
      * @return This builder.
      */
    public Integracion.Esquemas.Referencias.Direccion.Builder clearTelefono() {
      telefono = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'codigoISOProvincia' field.
      * segun ISO -3166-2 (https://es.wikipedia.org/wiki/ISO_3166-2:AR)
      * @return The value.
      */
    public java.lang.CharSequence getCodigoISOProvincia() {
      return codigoISOProvincia;
    }


    /**
      * Sets the value of the 'codigoISOProvincia' field.
      * segun ISO -3166-2 (https://es.wikipedia.org/wiki/ISO_3166-2:AR)
      * @param value The value of 'codigoISOProvincia'.
      * @return This builder.
      */
    public Integracion.Esquemas.Referencias.Direccion.Builder setCodigoISOProvincia(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.codigoISOProvincia = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'codigoISOProvincia' field has been set.
      * segun ISO -3166-2 (https://es.wikipedia.org/wiki/ISO_3166-2:AR)
      * @return True if the 'codigoISOProvincia' field has been set, false otherwise.
      */
    public boolean hasCodigoISOProvincia() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'codigoISOProvincia' field.
      * segun ISO -3166-2 (https://es.wikipedia.org/wiki/ISO_3166-2:AR)
      * @return This builder.
      */
    public Integracion.Esquemas.Referencias.Direccion.Builder clearCodigoISOProvincia() {
      codigoISOProvincia = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'codigoISOPais' field.
      * segun ISO 3166-1 alpha-2 (https://es.wikipedia.org/wiki/ISO_3166-1#Tabla_de_c.C3.B3digos_alfa-2_asignados_o_reservados)
      * @return The value.
      */
    public java.lang.CharSequence getCodigoISOPais() {
      return codigoISOPais;
    }


    /**
      * Sets the value of the 'codigoISOPais' field.
      * segun ISO 3166-1 alpha-2 (https://es.wikipedia.org/wiki/ISO_3166-1#Tabla_de_c.C3.B3digos_alfa-2_asignados_o_reservados)
      * @param value The value of 'codigoISOPais'.
      * @return This builder.
      */
    public Integracion.Esquemas.Referencias.Direccion.Builder setCodigoISOPais(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.codigoISOPais = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'codigoISOPais' field has been set.
      * segun ISO 3166-1 alpha-2 (https://es.wikipedia.org/wiki/ISO_3166-1#Tabla_de_c.C3.B3digos_alfa-2_asignados_o_reservados)
      * @return True if the 'codigoISOPais' field has been set, false otherwise.
      */
    public boolean hasCodigoISOPais() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'codigoISOPais' field.
      * segun ISO 3166-1 alpha-2 (https://es.wikipedia.org/wiki/ISO_3166-1#Tabla_de_c.C3.B3digos_alfa-2_asignados_o_reservados)
      * @return This builder.
      */
    public Integracion.Esquemas.Referencias.Direccion.Builder clearCodigoISOPais() {
      codigoISOPais = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'localidad' field.
      * @return The value.
      */
    public java.lang.CharSequence getLocalidad() {
      return localidad;
    }


    /**
      * Sets the value of the 'localidad' field.
      * @param value The value of 'localidad'.
      * @return This builder.
      */
    public Integracion.Esquemas.Referencias.Direccion.Builder setLocalidad(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.localidad = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'localidad' field has been set.
      * @return True if the 'localidad' field has been set, false otherwise.
      */
    public boolean hasLocalidad() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'localidad' field.
      * @return This builder.
      */
    public Integracion.Esquemas.Referencias.Direccion.Builder clearLocalidad() {
      localidad = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'componentesDeDireccion' field.
      * @return The value.
      */
    public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getComponentesDeDireccion() {
      return componentesDeDireccion;
    }


    /**
      * Sets the value of the 'componentesDeDireccion' field.
      * @param value The value of 'componentesDeDireccion'.
      * @return This builder.
      */
    public Integracion.Esquemas.Referencias.Direccion.Builder setComponentesDeDireccion(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
      validate(fields()[11], value);
      this.componentesDeDireccion = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'componentesDeDireccion' field has been set.
      * @return True if the 'componentesDeDireccion' field has been set, false otherwise.
      */
    public boolean hasComponentesDeDireccion() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'componentesDeDireccion' field.
      * @return This builder.
      */
    public Integracion.Esquemas.Referencias.Direccion.Builder clearComponentesDeDireccion() {
      componentesDeDireccion = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'coordenadas' field.
      * @return The value.
      */
    public Integracion.Esquemas.Referencias.GeoReferencia getCoordenadas() {
      return coordenadas;
    }


    /**
      * Sets the value of the 'coordenadas' field.
      * @param value The value of 'coordenadas'.
      * @return This builder.
      */
    public Integracion.Esquemas.Referencias.Direccion.Builder setCoordenadas(Integracion.Esquemas.Referencias.GeoReferencia value) {
      validate(fields()[12], value);
      this.coordenadasBuilder = null;
      this.coordenadas = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'coordenadas' field has been set.
      * @return True if the 'coordenadas' field has been set, false otherwise.
      */
    public boolean hasCoordenadas() {
      return fieldSetFlags()[12];
    }

    /**
     * Gets the Builder instance for the 'coordenadas' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public Integracion.Esquemas.Referencias.GeoReferencia.Builder getCoordenadasBuilder() {
      if (coordenadasBuilder == null) {
        if (hasCoordenadas()) {
          setCoordenadasBuilder(Integracion.Esquemas.Referencias.GeoReferencia.newBuilder(coordenadas));
        } else {
          setCoordenadasBuilder(Integracion.Esquemas.Referencias.GeoReferencia.newBuilder());
        }
      }
      return coordenadasBuilder;
    }

    /**
     * Sets the Builder instance for the 'coordenadas' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public Integracion.Esquemas.Referencias.Direccion.Builder setCoordenadasBuilder(Integracion.Esquemas.Referencias.GeoReferencia.Builder value) {
      clearCoordenadas();
      coordenadasBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'coordenadas' field has an active Builder instance
     * @return True if the 'coordenadas' field has an active Builder instance
     */
    public boolean hasCoordenadasBuilder() {
      return coordenadasBuilder != null;
    }

    /**
      * Clears the value of the 'coordenadas' field.
      * @return This builder.
      */
    public Integracion.Esquemas.Referencias.Direccion.Builder clearCoordenadas() {
      coordenadas = null;
      coordenadasBuilder = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Direccion build() {
      try {
        Direccion record = new Direccion();
        record.abreviaturaProvincia = fieldSetFlags()[0] ? this.abreviaturaProvincia : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.calle = fieldSetFlags()[1] ? this.calle : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.codigoDeDireccion = fieldSetFlags()[2] ? this.codigoDeDireccion : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.codigoCiudad = fieldSetFlags()[3] ? this.codigoCiudad : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.codigoPostal = fieldSetFlags()[4] ? this.codigoPostal : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.nombreProvincia = fieldSetFlags()[5] ? this.nombreProvincia : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.numero = fieldSetFlags()[6] ? this.numero : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.telefono = fieldSetFlags()[7] ? this.telefono : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.codigoISOProvincia = fieldSetFlags()[8] ? this.codigoISOProvincia : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.codigoISOPais = fieldSetFlags()[9] ? this.codigoISOPais : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.localidad = fieldSetFlags()[10] ? this.localidad : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.componentesDeDireccion = fieldSetFlags()[11] ? this.componentesDeDireccion : (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>) defaultValue(fields()[11]);
        if (coordenadasBuilder != null) {
          try {
            record.coordenadas = this.coordenadasBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("coordenadas"));
            throw e;
          }
        } else {
          record.coordenadas = fieldSetFlags()[12] ? this.coordenadas : (Integracion.Esquemas.Referencias.GeoReferencia) defaultValue(fields()[12]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Direccion>
    WRITER$ = (org.apache.avro.io.DatumWriter<Direccion>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Direccion>
    READER$ = (org.apache.avro.io.DatumReader<Direccion>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.abreviaturaProvincia == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.abreviaturaProvincia);
    }

    if (this.calle == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.calle);
    }

    if (this.codigoDeDireccion == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.codigoDeDireccion);
    }

    if (this.codigoCiudad == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.codigoCiudad);
    }

    if (this.codigoPostal == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.codigoPostal);
    }

    if (this.nombreProvincia == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.nombreProvincia);
    }

    if (this.numero == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.numero);
    }

    if (this.telefono == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.telefono);
    }

    if (this.codigoISOProvincia == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.codigoISOProvincia);
    }

    if (this.codigoISOPais == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.codigoISOPais);
    }

    if (this.localidad == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.localidad);
    }

    if (this.componentesDeDireccion == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size0 = this.componentesDeDireccion.size();
      out.writeMapStart();
      out.setItemCount(size0);
      long actualSize0 = 0;
      for (java.util.Map.Entry<java.lang.CharSequence, java.lang.CharSequence> e0: this.componentesDeDireccion.entrySet()) {
        actualSize0++;
        out.startItem();
        out.writeString(e0.getKey());
        java.lang.CharSequence v0 = e0.getValue();
        out.writeString(v0);
      }
      out.writeMapEnd();
      if (actualSize0 != size0)
      throw new java.util.ConcurrentModificationException("Map-size written was " + size0 + ", but element count was " + actualSize0 + ".");
    }

    if (this.coordenadas == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.coordenadas.customEncode(out);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.abreviaturaProvincia = null;
      } else {
        this.abreviaturaProvincia = in.readString(this.abreviaturaProvincia instanceof Utf8 ? (Utf8)this.abreviaturaProvincia : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.calle = null;
      } else {
        this.calle = in.readString(this.calle instanceof Utf8 ? (Utf8)this.calle : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.codigoDeDireccion = null;
      } else {
        this.codigoDeDireccion = in.readString(this.codigoDeDireccion instanceof Utf8 ? (Utf8)this.codigoDeDireccion : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.codigoCiudad = null;
      } else {
        this.codigoCiudad = in.readString(this.codigoCiudad instanceof Utf8 ? (Utf8)this.codigoCiudad : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.codigoPostal = null;
      } else {
        this.codigoPostal = in.readString(this.codigoPostal instanceof Utf8 ? (Utf8)this.codigoPostal : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.nombreProvincia = null;
      } else {
        this.nombreProvincia = in.readString(this.nombreProvincia instanceof Utf8 ? (Utf8)this.nombreProvincia : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.numero = null;
      } else {
        this.numero = in.readString(this.numero instanceof Utf8 ? (Utf8)this.numero : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.telefono = null;
      } else {
        this.telefono = in.readString(this.telefono instanceof Utf8 ? (Utf8)this.telefono : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.codigoISOProvincia = null;
      } else {
        this.codigoISOProvincia = in.readString(this.codigoISOProvincia instanceof Utf8 ? (Utf8)this.codigoISOProvincia : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.codigoISOPais = null;
      } else {
        this.codigoISOPais = in.readString(this.codigoISOPais instanceof Utf8 ? (Utf8)this.codigoISOPais : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.localidad = null;
      } else {
        this.localidad = in.readString(this.localidad instanceof Utf8 ? (Utf8)this.localidad : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.componentesDeDireccion = null;
      } else {
        long size0 = in.readMapStart();
        java.util.Map<java.lang.CharSequence,java.lang.CharSequence> m0 = this.componentesDeDireccion; // Need fresh name due to limitation of macro system
        if (m0 == null) {
          m0 = new java.util.HashMap<java.lang.CharSequence,java.lang.CharSequence>((int)size0);
          this.componentesDeDireccion = m0;
        } else m0.clear();
        for ( ; 0 < size0; size0 = in.mapNext()) {
          for ( ; size0 != 0; size0--) {
            java.lang.CharSequence k0 = null;
            k0 = in.readString(k0 instanceof Utf8 ? (Utf8)k0 : null);
            java.lang.CharSequence v0 = null;
            v0 = in.readString(v0 instanceof Utf8 ? (Utf8)v0 : null);
            m0.put(k0, v0);
          }
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.coordenadas = null;
      } else {
        if (this.coordenadas == null) {
          this.coordenadas = new Integracion.Esquemas.Referencias.GeoReferencia();
        }
        this.coordenadas.customDecode(in);
      }

    } else {
      for (int i = 0; i < 13; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.abreviaturaProvincia = null;
          } else {
            this.abreviaturaProvincia = in.readString(this.abreviaturaProvincia instanceof Utf8 ? (Utf8)this.abreviaturaProvincia : null);
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.calle = null;
          } else {
            this.calle = in.readString(this.calle instanceof Utf8 ? (Utf8)this.calle : null);
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.codigoDeDireccion = null;
          } else {
            this.codigoDeDireccion = in.readString(this.codigoDeDireccion instanceof Utf8 ? (Utf8)this.codigoDeDireccion : null);
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.codigoCiudad = null;
          } else {
            this.codigoCiudad = in.readString(this.codigoCiudad instanceof Utf8 ? (Utf8)this.codigoCiudad : null);
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.codigoPostal = null;
          } else {
            this.codigoPostal = in.readString(this.codigoPostal instanceof Utf8 ? (Utf8)this.codigoPostal : null);
          }
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.nombreProvincia = null;
          } else {
            this.nombreProvincia = in.readString(this.nombreProvincia instanceof Utf8 ? (Utf8)this.nombreProvincia : null);
          }
          break;

        case 6:
          if (in.readIndex() != 1) {
            in.readNull();
            this.numero = null;
          } else {
            this.numero = in.readString(this.numero instanceof Utf8 ? (Utf8)this.numero : null);
          }
          break;

        case 7:
          if (in.readIndex() != 1) {
            in.readNull();
            this.telefono = null;
          } else {
            this.telefono = in.readString(this.telefono instanceof Utf8 ? (Utf8)this.telefono : null);
          }
          break;

        case 8:
          if (in.readIndex() != 1) {
            in.readNull();
            this.codigoISOProvincia = null;
          } else {
            this.codigoISOProvincia = in.readString(this.codigoISOProvincia instanceof Utf8 ? (Utf8)this.codigoISOProvincia : null);
          }
          break;

        case 9:
          if (in.readIndex() != 1) {
            in.readNull();
            this.codigoISOPais = null;
          } else {
            this.codigoISOPais = in.readString(this.codigoISOPais instanceof Utf8 ? (Utf8)this.codigoISOPais : null);
          }
          break;

        case 10:
          if (in.readIndex() != 1) {
            in.readNull();
            this.localidad = null;
          } else {
            this.localidad = in.readString(this.localidad instanceof Utf8 ? (Utf8)this.localidad : null);
          }
          break;

        case 11:
          if (in.readIndex() != 1) {
            in.readNull();
            this.componentesDeDireccion = null;
          } else {
            long size0 = in.readMapStart();
            java.util.Map<java.lang.CharSequence,java.lang.CharSequence> m0 = this.componentesDeDireccion; // Need fresh name due to limitation of macro system
            if (m0 == null) {
              m0 = new java.util.HashMap<java.lang.CharSequence,java.lang.CharSequence>((int)size0);
              this.componentesDeDireccion = m0;
            } else m0.clear();
            for ( ; 0 < size0; size0 = in.mapNext()) {
              for ( ; size0 != 0; size0--) {
                java.lang.CharSequence k0 = null;
                k0 = in.readString(k0 instanceof Utf8 ? (Utf8)k0 : null);
                java.lang.CharSequence v0 = null;
                v0 = in.readString(v0 instanceof Utf8 ? (Utf8)v0 : null);
                m0.put(k0, v0);
              }
            }
          }
          break;

        case 12:
          if (in.readIndex() != 1) {
            in.readNull();
            this.coordenadas = null;
          } else {
            if (this.coordenadas == null) {
              this.coordenadas = new Integracion.Esquemas.Referencias.GeoReferencia();
            }
            this.coordenadas.customDecode(in);
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










